name: CI
on:
  - push
  - pull_request
jobs:
  test:
    strategy:
      matrix:
        platform:
          - Linux
          - macOS
          - Windows
        toxenv:
          - py310
          - py311
          - py312
          - py313
          - py314
        include:
          - platform: Linux
            os: ubuntu-22.04
          - platform: macOS
            os: macos-latest
          - platform: Windows
            os: windows-latest
          - toxenv: py310
            python-version: '3.10'
          - toxenv: py311
            python-version: '3.11'
          - toxenv: py312
            python-version: '3.12'
          - toxenv: py313
            python-version: '3.13'
          - toxenv: py314
            python-version: '3.14'
      fail-fast: false
    name: tox -e ${{ matrix.toxenv }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    env:
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      TOXENV: ${{ matrix.toxenv }}
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U coverage tox
      - name: Install VCSes on Linux
        if: matrix.platform == 'Linux'
        run: sudo apt install brz darcs fossil
      - name: Install VCSes on macOS
        if: matrix.platform == 'macOS'
        run: brew install breezy darcs fossil mercurial
      - name: Install VCSes on Windows
        if: matrix.platform == 'Windows'
        run: |
          choco install -y fossil hg
          echo $env:ProgramFiles\Mercurial >>$env:GITHUB_PATH

          $uri = 'https://darcs.net/binaries/windows/'
          mkdir $env:ProgramFiles\Darcs | Out-Null
          Invoke-WebRequest ($uri + ((Invoke-WebRequest $uri).Links | Where-Object { $_.Href -match '\.exe$' } | Select-Object -Last 1).Href) -OutFile $env:ProgramFiles\Darcs\darcs.exe
          echo $env:ProgramFiles\Darcs >>$env:GITHUB_PATH
      - name: Test
        run: tox
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: TOXENV
          fail_ci_if_error: true
          flags: ${{ matrix.platform }}
